require('dotenv').config();
const fs = require('fs').promises;
const path = require('path');

console.log('üîç Ki·ªÉm tra m√¥i tr∆∞·ªùng:');
console.log('  - QUESTION_FILE:', process.env.QUESTION_FILE);
console.log('  - Th∆∞ m·ª•c hi·ªán t·∫°i:', process.cwd());

const dataDir = path.join(__dirname, 'data');
const questionFileName = process.env.QUESTION_FILE || 'questions.json';
const questionFile = path.join(dataDir, questionFileName);

async function addIdsToQuestions() {
    try {
        if (!process.env.QUESTION_FILE && !fs.existsSync(questionFile)) {
            throw new Error('üö® QUESTION_FILE ch∆∞a ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a trong .env, v√† file questions.json m·∫∑c ƒë·ªãnh kh√¥ng t·ªìn t·∫°i.');
        }

        const absolutePath = path.resolve(questionFile);
        console.log(`üìç ƒê∆∞·ªùng d·∫´n file: ${absolutePath}`);

        await fs.mkdir(dataDir, { recursive: true });

        try {
            await fs.access(absolutePath);
        } catch {
            throw new Error(`üö® File kh√¥ng t·ªìn t·∫°i: ${absolutePath}.`);
        }

        console.log(`üìñ ƒêang ƒë·ªçc file: ${absolutePath}`);
        const data = await fs.readFile(absolutePath, 'utf8');
        const questions = JSON.parse(data);

        if (!Array.isArray(questions)) {
            throw new Error('üö® File JSON kh√¥ng ph·∫£i m·∫£ng c√¢u h·ªèi h·ª£p l·ªá.');
        }

        let modified = false;
        questions.forEach((q) => {
            if (q.id !== undefined) {
                q.id = "";
                modified = true;
                console.log(`üîÑ Reset id c·ªßa: "${q.question || 'Kh√¥ng c√≥ n·ªôi dung'}"`);
            }
        });

        questions.forEach((q, i) => {
            if (q.id === "") {
                q.id = `${i + 1}`;
                modified = true;
                console.log(`‚ûï Th√™m id: ${q.id} cho: "${q.question || 'Kh√¥ng c√≥ n·ªôi dung'}"`);
            }
        });

        if (modified) {
            await fs.writeFile(absolutePath, JSON.stringify(questions, null, 2), 'utf8');
            console.log(`‚úÖ ƒê√£ ghi ƒë√® file: ${absolutePath} v·ªõi id m·ªõi`);
        } else {
            console.log('‚ÑπÔ∏è Kh√¥ng c√≥ thay ƒë·ªïi.');
        }
    } catch (err) {
        console.error('‚ùå L·ªói:', err.message);
        process.exit(1);
    }
}

addIdsToQuestions();